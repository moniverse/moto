
runtime dart {
    let x = 5; 
    task run { 
        # inside a task you can write any code that you want to run in the language of the runtime
        # for example here the code is written in powershell. that is why
        $something = @'[:block]'@
        $something | Out-File -FilePath "./_.dart" -Encoding UTF8
        dart run "./_.dart"
    }:shell
}:moto


runtime rust {
    let x = 5;
    task run {
        $something = @'[:block]'@
        $something | Out-File -FilePath "./_.rs" -Encoding UTF8
        rustc "./_.rs"
        ./_.exe
    }:shell
}:moto

runtime python {
    let x = 5;
    task run {
        $something = @'[:block]'@
        $something | Out-File -FilePath "./_.py" -Encoding UTF8
        python "./_.py"
    }:shell
}:moto

runtime javascript {
    let x = 5;
    task run {
        $something = @'[:block]'@
        $something | Out-File -FilePath "./_.js" -Encoding UTF8
        node "./_.js"
    }:shell
}:moto



block developerCredits {
    // auto generated by the moto compiler 
}:text

task greet {
    start calc
}:shell

task greetings_from_dart {
        void main() {
            print("Hello from Dart");
        }
}:dart

task commit {
    echo "Commiting to git"
    git commit -m "commit message"
}:shell


task greet_from_rust {
    fn main() {
        // lets try a more complex example
        let x = 5;
        let y = "hello";
        let z = true;
        //print in red
        println!("\x1b[31mthis is being printed from rust using \x1b[32mmoto's \x1b[33msuper smart \x1b[34mcompiler \x1b[0m");
        println!("x: {}", x);
        println!("y: {}", y);
        println!("z: {}", z);
    }
}:rust

task greet_from_python {
    print("Hello from Python")
}:python

task greet_from_javascript {
    console.log("Hello from Javascript")
}:javascript


task bump {
    echo "Bumping version"
    ./bump.ps1
}:ps