name: moto release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:

  create-release:
    if: contains(github.event.head_commit.message, 'release')
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Determine Release Tag
        id: release_tag
        run: |
          echo "RELEASE_TAG=v$(date +'%Y.%m.%d.%H%M%S')" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: moto ðŸš€ release ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false

  release:
    needs: create-release
    if: contains(github.event.head_commit.message, 'release')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            artifact_name: moto.exe
            asset_name: moto-windows.exe
          - os: ubuntu-latest
            artifact_name: moto
            asset_name: moto-linux

    steps:
      - uses: actions/checkout@v3

      - name: Cache Cargo Registry and Target Directory
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build Rust Project
        run: cargo build --release --bin moto

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: ./target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream